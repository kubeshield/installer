// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// installer.kubeshield.io_identityservers.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _installerKubeshieldIo_identityserversYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x6d\x8f\xdc\x38\x72\xff\x7b\x7f\x8a\xc2\xfc\xff\xc0\xcc\x04\xdd\x3d\xeb\x6c\x70\x48\x7a\x17\x1b\x4c\x6c\xef\xc1\x58\xaf\xcf\xb0\x9d\x3d\x20\x8b\x0b\xc0\x96\xaa\xbb\x79\x23\x91\x5a\x92\xea\x71\x6f\x90\xef\x1e\xf0\x49\xcf\x94\xa8\xf6\x78\xf7\x2e\x11\xdf\xd8\x23\xa9\x8b\xc5\x62\xb1\x58\xf5\xe3\x4f\xdd\xa4\xa0\x3f\xa1\x90\x94\xb3\x2d\x90\x82\xe2\x27\x85\x4c\xff\x25\x37\x0f\xff\x2c\x37\x94\xdf\x9d\x9e\xef\x50\x91\xe7\xcf\x1e\x28\x4b\xb7\xf0\xa2\x94\x8a\xe7\xef\x51\xf2\x52\x24\xf8\x12\xf7\x94\x51\x45\x39\x7b\x96\xa3\x22\x29\x51\x64\xfb\x0c\x20\x11\x48\xf4\xc5\x8f\x34\x47\xa9\x48\x5e\x6c\x81\x95\x59\xf6\x0c\x20\x23\x3b\xcc\xa4\x7e\x06\x80\x14\xc5\x16\x4e\xa4\xcc\xd4\x33\x00\x46\x72\xdc\x02\x4d\x91\x29\xaa\xce\x12\xc5\x09\x85\xdc\x50\x26\x15\xc9\x32\x14\x9b\x87\x72\x87\xf2\x48\x31\x4b\x37\x94\x3f\x93\x05\x26\x5a\xc8\x41\xf0\xb2\xd8\x42\xe8\x31\x2b\xd6\x75\x97\x10\x85\x07\x2e\xa8\xff\x7b\x0d\xf5\xc3\xee\x02\x29\x0a\x99\xf0\x14\xcd\x9f\x76\xbc\xaf\x9d\x46\x1f\x8c\x46\xe6\x46\x46\xa5\xfa\x61\xe0\xe6\x1b\x2a\x95\x79\xa0\xc8\x4a\x41\xb2\xde\x68\xcc\x3d\x49\xd9\xa1\xcc\x88\xd8\x36\x7a\xe7\x05\x0a\xa2\xb8\x96\x5e\x08\x34\x4f\xff\x3b\x7b\x60\xfc\x91\x7d\xaf\x6f\xcb\x2d\xec\x49\x26\xb5\x56\x32\xe1\x05\x6e\xe1\xad\x1e\x55\x41\x12\xd4\x8a\x9f\x48\x46\x53\x63\x6e\x3b\x2e\x5e\x20\xbb\x7f\xf7\xfa\xa7\xaf\x3f\x24\x47\xcc\x89\xbd\xa8\x25\xeb\x6e\x54\x35\x7c\x3b\x03\xd5\xdc\x57\xd7\x00\x52\x94\x89\xa0\x85\x91\x08\xd7\x5a\x94\x7d\x06\x52\x3d\xdb\x28\x41\x1d\x11\x4e\xf6\x1a\xa6\x20\x4d\x37\xc0\xf7\xa0\x8e\x54\x82\x40\x33\x06\xa6\x8c\x4a\x0d\xb1\xa0\x1f\x21\x0c\xf8\xee\xaf\x98\xa8\x0d\x58\xa3\x49\x90\x47\x5e\x66\x29\x24\x9c\x9d\x50\x28\x10\x98\xf0\x03\xa3\xbf\x56\x92\x25\x28\x6e\xba\xcc\x88\x42\x67\x61\xdf\x28\x53\x28\x18\xc9\xb4\x11\x4a\x5c\x01\x61\x29\xe4\xe4\x0c\x02\x75\x1f\x50\xb2\x86\x34\xf3\x88\xdc\xc0\x8f\x5c\x20\x50\xb6\xe7\x5b\x38\x2a\x55\xc8\xed\xdd\xdd\x81\x2a\xef\xed\x09\xcf\xf3\x92\x51\x75\xbe\x4b\x38\x53\x82\xee\x4a\xc5\x85\xbc\x4b\xf1\x84\xd9\x9d\xa4\x87\x35\x11\xc9\x91\x2a\x4c\x54\x29\xf0\x8e\x14\x74\x6d\x14\x67\xca\x2c\x99\x3c\xfd\x7f\xc2\x2d\x0d\x79\xdd\xd0\x54\x9d\xf5\xb4\x49\x25\x28\x3b\x54\x97\x8d\x83\x05\xed\xae\x3d\x0c\xa8\x04\xe2\x3e\x66\xf5\xaf\xcd\xab\x2f\x69\xab\xbc\x7f\xf5\xe1\x23\xf8\x4e\xcd\x14\xb4\x6d\x6e\xac\x5d\x7f\x4c\xd6\x86\xd7\x86\xa2\x6c\x8f\xc2\x4e\xdc\x5e\xf0\xdc\x48\x44\x96\x16\x9c\x32\x65\xfe\x48\x32\x8a\xac\x6d\x74\x59\xee\x72\xaa\xf4\x4c\xff\x52\xa2\x54\x7a\x7e\x36\xf0\x82\x30\xc6\x15\xec\x10\xca\x22\x25\x0a\xd3\x0d\xbc\x66\xf0\x82\xe4\x98\xbd\x20\x12\xbf\xb8\xd9\xb5\x85\xe5\x5a\x9b\x74\xda\xf0\xcd\x50\xe5\xdb\xd0\xf2\xd0\xcd\xc4\xa5\xd6\x15\x80\x9c\x7c\x7a\x83\xec\xa0\x8e\x5b\xf8\xc3\xd7\x9d\x7b\x05\x51\xda\x25\xb7\xf0\x9f\x3f\x93\xf5\xaf\x7f\xb9\xf9\x79\x4d\xd6\xbf\x7e\xb5\xfe\x97\xbf\xfc\xc3\xcf\xee\x3f\xb7\xff\xfa\xff\x3b\x9f\x19\x54\xd2\x5f\xb6\x13\x58\x5d\xf6\x91\x6f\xd0\x69\xda\xf1\xe8\x43\x81\x89\xf6\x20\x3d\x8d\xfa\x63\xb0\xe7\x02\x04\xa6\x54\xfa\xd5\x1b\x31\x7e\xb2\x37\x11\xfe\xdc\xb5\x41\xbb\xdf\xbd\xe9\x80\xee\x29\xa6\x2b\xd3\x5f\xc1\xd3\x6b\x69\x16\x70\x5a\x66\xda\x55\x13\xce\xa4\x12\x84\x32\x25\xbb\x16\x0b\xf4\x6c\xac\xcf\x53\xbc\x0f\x68\xd0\xd3\xe2\xa5\xf9\x63\x87\xd2\x7c\xac\xd2\xbc\xa9\x85\x28\x33\x94\xc6\x0e\x4e\xc9\xcd\x80\xd0\x31\x85\xec\x7d\xdc\xa3\x10\x98\xbe\x2c\xf5\x8c\x7d\xa8\xc4\xbf\x3e\x30\x5e\x5d\x7e\xf5\x09\x93\x52\x75\x42\x6b\x50\xf7\x8f\x7a\x8e\xac\x20\x14\xf0\x48\xb3\xcc\x75\xa3\x83\x9f\xbf\xa1\x15\x36\xd1\x50\x8f\xaf\x6b\xc6\xba\xa9\x23\x51\x20\x89\xa2\x72\x7f\x36\xe3\xac\x2c\x81\x9f\x74\x14\x30\xbb\x7b\x3d\x61\xb0\x3b\xbb\x00\xa0\x37\x9b\x55\x50\xec\xae\x54\x40\x95\x89\x1a\xc9\x91\x73\x89\x40\xac\xa1\x4d\x7f\x27\xca\x4d\x7c\x06\xce\x10\xb8\x80\x5c\x2f\x77\xb3\x27\x60\x50\x62\x43\x9d\x8d\xb1\x40\x2d\x8e\x4a\xc8\xb9\x54\xb5\xad\xbd\x23\x6b\xf1\x8f\x54\x1d\x47\x46\x8f\x70\xd0\xf9\x07\x4a\x05\xb2\xcc\xb5\x12\x8f\x48\x0f\x47\x25\x57\x40\x37\xb8\x31\xd3\x8f\x24\x39\x36\xba\xcb\x11\x7b\x7e\x59\x37\x92\x65\x6e\x28\x2d\x5f\xc2\x5f\x4a\x2a\x30\xd7\x41\x15\x6e\xaa\x08\xec\xa2\xe2\xca\xdf\xef\x79\x49\xb8\x9b\x81\x69\x5a\x01\xaa\x64\x73\xbb\x82\x84\xe7\x45\xa9\xb4\xcd\xf5\x98\x76\x67\xa0\x4a\x27\x0d\x76\x17\x10\xbc\x3c\x8c\x5b\x04\x33\xa7\xa8\xdf\xa6\xcd\x64\x9b\xfd\x92\xa4\xa9\x96\x72\x65\x8d\x74\xe5\x77\x5b\x59\xe6\x41\x89\xd4\x1a\xc3\xd8\x2f\x27\x2a\x39\xba\xa4\x20\xe1\x42\xa0\x2c\x38\x33\x12\xcd\x9d\x57\xf5\x58\xbe\x19\x75\x06\x2d\xec\x46\xde\x9a\xc9\x35\xc2\x8e\xf4\x70\xf4\x73\x48\x04\x9a\x6b\x6d\x9f\x18\x5a\xbc\x46\x3d\x85\x79\x60\xed\x42\x77\xe1\xdd\x33\xc0\xbc\x50\xe7\x86\xa7\x35\xe6\x58\xa1\xc8\xab\x11\x12\x93\xc1\x86\x9a\x8d\xd3\xd2\xea\x4f\xf3\x22\xa3\x09\x55\xce\xf3\xe0\x2b\xb8\x31\xae\x47\xd5\xb5\x34\xcb\x66\xcd\x8b\xdb\x0d\xdc\xfb\xb4\x38\xd4\xa6\x95\x62\xbc\xea\xd9\x75\xa1\x15\x95\x7c\x44\x68\xd5\x7f\xf0\x99\xa9\x08\xd8\x54\x0e\x59\xd2\xdb\x20\xdb\xad\x6d\x6f\xeb\x35\x12\x33\x4c\x94\x8e\xc3\x28\xf2\x15\x10\x29\x79\x42\x75\xda\x50\xcd\xff\xa8\x48\xe8\xb8\x9a\x35\x73\x78\x40\xf1\x83\x02\xb3\xbf\xb7\x1d\x77\xea\xf9\xde\x10\x75\x85\xa0\x57\x5a\x7b\xa8\xcd\x80\x31\x29\x11\xf4\x1a\xd7\x9f\xbf\x96\xae\x68\x1a\x1f\x1d\x4c\xfb\x7d\x50\xdd\xa0\x9a\x2e\xff\x74\x77\x22\x04\xbb\xcd\x47\xe7\x70\x84\x32\xe9\x72\xee\x15\x10\x78\xc0\xb3\x4d\xcf\x75\x05\xe0\xea\x1d\xf3\x70\x94\x54\x81\x76\x73\xd1\x31\xe0\x01\xcf\x46\x90\xcb\xe7\x23\x3e\x1f\x3f\xf3\xb6\x3d\xe0\x60\xb2\x31\xd4\x7a\x9b\xb8\x99\x2b\xa3\xa3\xb1\x84\x89\xa4\x73\xec\x07\xb6\x30\xce\x28\x9a\xbc\x3a\xf2\x33\x81\x0c\x32\xdc\xfc\x14\x5c\x34\xce\xf7\x55\x31\x61\x27\xf6\x5a\xda\x09\xd2\x6b\xe5\x48\x8b\xe8\x71\x2a\x6e\xbc\xcb\x2c\x15\x5f\x9d\xfd\xa4\xab\xd9\x4a\x3d\x69\x22\xff\x6b\x16\xce\x4a\xba\xed\x2d\x57\xaf\xd9\x0a\x5e\x7d\xa2\x52\x6f\xf8\x2f\x39\xca\xb7\x5c\x99\x3f\x37\xf0\x47\x65\x7d\xf0\xcd\x44\xa8\x68\xa8\x38\xd7\xb0\x76\x1c\x17\x99\xf5\x9e\x01\x11\x82\x9c\xb5\x39\x9a\x35\x9f\xdc\xe8\x04\x7b\x3a\x24\xd6\xad\x5a\x60\x54\xea\x2a\x8c\x0b\x6f\x16\x53\xb9\x1b\x99\xb6\xab\x68\x89\x79\x29\x4d\x71\xc7\x38\x5b\x9b\xfd\xd2\xeb\xd4\xea\xcb\x5a\x3d\x5e\x4d\xd1\x9a\x9f\xbe\x7a\xbe\xdb\x68\x89\x61\xd5\xfe\xa8\x74\x77\x6f\x5a\x9d\xc4\x2f\xc8\x5a\x99\x23\x39\x99\x24\x8c\xb2\x43\x56\xa5\x55\x2b\x78\x3c\xd2\xe4\x68\xf2\xf6\x68\xa1\x3b\xb4\xf0\x45\x21\x50\xef\x7b\x44\xea\xd0\xa8\xaf\x1c\x50\xe8\x74\x98\x7a\x23\xd0\x78\x45\x05\x16\x19\x49\x30\x85\xd4\x24\x9d\x16\x3c\x20\x0a\x0f\x34\x81\x1c\xc5\x01\x75\x7d\x9a\x1c\x63\xbd\x3f\x7a\x43\xb1\x6d\xf6\x62\xf1\x1f\x89\xf5\x45\x9f\x52\xc7\xa8\xb4\xd6\x91\x29\xea\xb9\x06\xfc\x16\xa7\x6e\xa7\x24\x1f\x7f\x38\x66\x6c\x26\xe1\x70\x58\xdf\xef\x9c\x6b\x98\xba\x60\xc9\x35\x96\x5c\x23\xd8\x96\x5c\xc3\xb7\x25\xd7\x58\x72\x8d\x25\xd7\x58\x72\x8d\xbf\xa3\x5c\x23\x52\xa8\xc5\x53\x66\xc0\x3a\x7f\xb6\x38\x57\x17\xc7\x31\x89\x8d\x3f\xa9\x6a\x41\x36\x13\x23\xd2\x69\xc2\x07\xb7\x97\x7d\x34\x10\x11\x65\x46\x88\x20\xec\x80\xf0\x7c\xfd\xfc\xab\xaf\xc6\x3d\x6b\xcf\x45\x4e\xd4\x56\x7b\xf9\xd7\xff\x18\x61\x13\xb7\x1a\x82\x4f\x4e\xfb\xc3\xba\x81\x88\x8d\x3c\x64\x6d\x1b\x46\x6b\xa7\x67\x68\x6a\xb2\x43\xc8\xf3\x67\x9c\x4f\xb8\x28\x57\x41\xd4\x2d\xf0\xbb\x77\x94\x10\x1c\x9c\x43\x9d\x85\x0e\xee\x0a\x72\x54\x40\x54\x0b\xda\xa4\x39\x56\x07\x48\xf6\x18\xc4\x9e\x2a\x06\x25\xfa\xb3\x91\x14\x38\x73\xc8\xb5\xf6\x9d\x4d\xa4\xc6\xe1\xd3\x8e\xe6\xa1\x08\x24\x48\x24\xea\x1c\x62\x87\x95\xd6\x3c\xd7\x5a\x52\xa6\x7c\x00\xd4\x2a\xa3\xb7\x6a\x50\xf0\x0d\x6e\x0e\x1b\x48\x4b\x23\x8e\x30\x77\x5c\x7a\x6b\x47\x2d\xcf\x52\x61\x6e\xce\x58\xb8\x30\xff\xe8\xe1\x2b\x71\x06\x15\x46\x74\xf1\x84\x4c\x95\x24\xcb\xce\x80\x27\x9a\xa8\xca\x7e\xe6\x44\x97\x2a\x7b\x1e\x16\x5a\x2d\x31\x09\x6b\x77\x35\x8e\xc6\xe9\x4e\xfa\x66\x5d\x71\x13\xac\x54\x94\x96\x67\x8e\x7f\xc6\x17\xa9\x7e\xcc\x78\xce\x9f\xde\x87\x91\x7f\x88\xdb\x48\xba\x35\x49\x99\x65\xda\xde\xf6\x20\xa0\xaf\x9e\x07\xdb\x27\x63\x96\x87\xe2\xed\x69\x56\xcb\xe3\xec\xf9\x91\x3d\xc9\xb8\x7f\xfb\x52\x5b\x64\x6a\xc8\x00\x1f\x79\xc1\x33\x7e\x38\x37\x6d\x6f\x56\xbf\x39\x60\x70\x92\x09\xc8\x72\xe7\x32\xdb\xe9\xc4\xed\x6d\x67\x2a\x17\xcc\x7c\xa9\x63\x87\xda\x52\xc7\xf6\xda\x52\xc7\x46\xaa\xb8\xd4\xb1\xa6\x2d\x75\xec\x52\xc7\x4e\xb6\xa5\x8e\x1d\x78\x78\xc1\xcc\x97\x5c\x63\xa4\x2d\xb9\x46\xaf\x2d\xb9\xc6\x92\x6b\x2c\xb9\xc6\x92\x6b\x8c\xb6\x25\xd7\x18\x78\xf8\xc9\x30\xf3\x69\x71\x53\xe6\x59\xf7\x81\xb6\x51\x04\x38\xa8\xd2\xe8\xed\x82\xa7\x17\x50\xea\x0b\x9e\x8e\x30\xea\x2d\xa8\x99\xf0\x75\xc6\x13\xa2\x86\xe3\x81\x81\x53\xb5\x18\x87\xe4\x4b\x92\x5b\xac\x76\x05\xbf\x72\x86\x96\xe9\xac\x97\x99\x41\x56\xb9\x3a\xa2\xd0\x8f\xdf\xc8\xdb\x41\xa6\xea\xc2\xd2\x1f\x6c\x0b\x4b\x7f\x61\xe9\xbb\xd6\x64\xe9\x1f\x89\xb4\x7e\x69\x37\xc2\x30\x69\xbf\x11\x1d\x74\x00\xfa\x66\x54\xdf\xdf\x89\xb3\xaf\x9d\xd0\x39\x8b\x79\xa7\xb0\x9e\x78\x3b\xae\xd4\x1d\x47\x62\xfa\xae\x3d\x9a\x91\xe8\x6d\x6b\x38\xa3\x34\x49\x53\x4c\xa1\x40\xb1\xb6\xae\xc7\x61\x4f\x59\x3a\x30\x16\x3f\xfe\xa0\xd8\x48\x1e\x7d\x5b\xc9\x19\x47\x17\xcd\xd3\x95\x56\x80\xee\xb2\xea\x27\xf6\xc2\x6a\xfe\xbe\x24\xab\xde\x54\x5e\x7e\x73\x9b\x5f\xb2\x9b\xba\xed\x97\x12\xc5\x19\xf8\x09\x45\x5d\x99\x54\x2f\x5c\xc6\x14\x21\x66\xef\xa1\x12\x12\x22\x6d\xa0\x9e\x4e\xb5\xe6\x55\xa7\xf3\xcf\x41\x7a\x83\xed\x8a\xb0\x55\xbe\xc7\x2c\x8c\x21\x22\xb3\xb7\x41\x68\x63\xe0\x70\x8a\x88\xd8\x14\xde\x1e\x5d\x45\x3d\x3c\x2b\x39\x1d\x9c\xed\x00\xe4\x11\x5f\x16\x34\x8e\xf1\x26\x60\x8f\x78\x99\x1d\x78\xe4\x33\xa1\x0f\xb8\x00\xfe\x80\x79\x10\x08\x74\xcd\xab\xb5\x74\xfb\x74\x1f\x0d\x99\x21\xb4\xe1\x5f\xf3\x11\x11\xb8\xac\x1e\x99\x8f\x8c\x40\x77\xf8\xd5\xf4\x89\x1e\x4c\x32\x6b\xf0\x4d\x48\x25\x0c\x95\xcc\x12\xd9\x83\x55\xda\x70\x89\xf1\xad\x16\x62\xf2\xa5\x8d\x3d\x0f\x2d\x81\xae\xa9\x1d\x56\x40\x4d\xe9\xdc\xc1\x4e\x66\x19\xa6\x8d\xb3\x04\xf1\x93\x59\x32\x43\x60\x46\x1b\x43\x99\x2d\xb2\x8f\xb7\xf4\x70\x94\xa7\x51\xd3\xa9\x58\x03\x11\xb3\xc4\xda\x6f\x6a\x78\x4a\x30\x02\xe6\x03\x12\x70\xa9\x5f\xce\x05\x26\x60\x26\x38\x01\x33\x00\x0a\x98\x0b\x52\xc0\x5c\xa0\x02\x66\x8f\xd7\xa4\x10\x6f\x1a\xdf\xb5\x32\xd5\x74\x79\xa1\xd7\x2c\xc9\xde\xcd\xde\x8d\x66\xcf\x60\x3f\xdb\xb1\xaa\xda\x44\x27\x27\x85\x8e\x12\xff\xa5\xb7\x66\xe3\xf8\xff\x1d\xbb\x8f\x12\x2a\xa4\x4e\x85\x1d\xf8\xd7\x90\xe0\x31\x87\x46\x67\x91\x42\xb5\x36\x54\x82\xf6\x9d\x13\xc9\x74\x02\x62\x69\x5b\xae\x54\xd3\x9a\x76\xf3\xb5\xd8\xf5\xfd\x78\xd4\xe5\xb9\xde\x7c\x6d\x99\x47\x25\x5c\x3d\xe0\xf9\x6a\xd5\x8b\x23\x57\xaf\xd9\x55\xac\x54\xe2\x4a\x95\x56\xcc\xa8\x32\x1f\xce\xb2\x33\x5c\x99\x7b\x57\xb1\x0b\x7b\x28\x5d\x9c\x93\x08\x5e\x00\xca\x45\x3d\xcc\xfc\xb7\xe0\xcc\x3d\x00\xac\x3f\x58\xe1\x2b\xbe\x30\xae\x6f\xc5\xa0\x8d\x3e\x83\xfa\xd0\xcf\x83\xe0\xa6\x7a\x6d\xfc\xa0\x2d\xaf\x6e\xc3\xa5\x74\x63\x48\x2d\x26\x9a\x49\xf9\x73\x24\x4c\xc2\x95\x47\xcf\xae\x65\xad\xe3\xd5\xd3\x9d\x38\xce\x5a\xc3\xf1\xb1\x48\x39\x02\xdb\x0f\x31\xe9\x6a\xa7\xc6\x77\x68\xa1\xfb\x7a\xa0\x1d\xd6\xf0\x62\x0a\x37\xbe\xd2\x0d\xd7\xde\x75\xe3\xc2\xb0\x28\x5b\x1f\x67\x8a\xae\x2b\x19\x75\xfd\xab\x2b\xc2\xd8\xf0\xea\x69\xcd\x6d\x0f\xf0\xe0\x66\x85\xdb\xd5\x1e\x15\xb3\x82\x1f\x8f\x28\x5a\x23\xa5\xd2\x7d\xed\x92\x39\x81\x10\x25\x63\xba\x5f\xce\x1c\xac\x17\x25\x52\x87\x19\xfb\xed\x41\x0e\x26\xb1\x69\xbf\x19\xb5\xc9\xfd\xeb\x59\x8a\xa4\x3a\x82\x07\x30\xcd\x57\x3a\x39\xce\x24\x67\x6e\x11\xe9\x2b\x1e\x89\x33\x76\xc1\x34\xd6\xb2\xb4\x1a\xe3\x06\x5e\x99\x45\xd0\x54\x8e\x4a\x33\x93\x24\xcb\xf8\x63\x4c\xf4\x89\xf6\xea\xb8\xdc\x60\xdd\x54\xe6\x29\x8e\x0c\x66\xd3\xec\x1f\x9f\x98\x66\xdf\x81\x9e\xfe\x4e\x58\xf6\x91\xa0\xde\x42\xb5\x5f\xa8\xf6\x0d\xaa\xbd\xf9\x90\x8d\x7c\xd3\x9c\xfb\xb0\xcf\x18\x2e\x7e\x2c\xe7\x1e\xfe\x7c\x44\xb3\xa2\x46\x00\x36\x3d\x45\x79\x99\x29\x5a\xd4\x07\xd6\xd2\xaa\x96\xd9\xf2\xd1\x12\x95\x64\x07\x9d\x1d\x7b\x23\x80\x24\xc7\xee\x32\x31\xfd\x98\x03\x6d\x69\x22\xb2\x3b\x66\x21\x59\xe6\xb8\xf5\xba\xae\x0c\xcf\x11\xba\xb3\x2a\xfa\x34\x10\xfe\x4b\xf7\x55\x82\x15\x68\x62\x0e\x27\x6e\xf4\x66\x99\x69\x77\xd0\x5b\x96\x8f\x6a\x63\x67\xae\xbd\xfd\xd7\xa2\x32\x27\xf4\x07\x24\x07\x7a\x42\x56\x6f\xc2\x37\xf2\xf6\x76\x8a\xd6\xa4\x22\x53\x8f\x7e\x62\x31\x22\x74\x28\xe5\x58\x45\x6e\xf7\x23\x62\xab\x44\x20\x62\x9b\xff\xb6\xb1\x7b\x7d\x37\x22\xb3\x3e\x1c\x0a\x6e\xf0\xc6\x3c\xd5\x16\x5f\x4d\xe0\x88\x50\x3a\x3d\x9a\x38\x1c\x74\xc6\x31\xc2\x05\x47\x08\x40\xc3\xe1\xc4\xb6\x39\xc7\x07\xbf\xd9\xeb\x13\x11\x47\x06\x73\x68\x6e\xd3\xc7\x05\xb1\xf5\xdf\xa5\x94\xc7\xd1\x03\x80\x85\xf3\x38\xda\xe2\xc1\xfe\xff\x7d\xd4\xc7\x11\x70\xff\x6f\x94\x03\x79\x31\xa8\xff\x5b\x52\x1f\xc7\x80\xfc\x99\xa7\x5d\x30\x05\xe2\x7f\x26\x01\x70\x8a\x04\x19\x2d\x33\x00\xde\x0f\x03\xf2\xd1\x52\x87\x80\xfb\x41\x30\x3e\x5a\xe2\xc2\x20\x9c\x7c\xee\xf7\x66\x10\xce\x04\xe4\x2f\x05\xe3\x67\xcd\xce\x5c\x10\xde\xc1\xeb\x11\x6a\x44\x02\xf0\x7d\x68\x3d\x66\x88\x93\xe0\x7b\x17\x56\x8f\x03\x9d\xc6\x80\xf7\x41\x48\x3d\x42\xec\x30\xe8\xfe\x59\xe9\x54\xb4\x77\x46\x3e\x18\x0b\xa1\xcf\x87\xcf\x23\xb8\x04\x33\xa0\x73\x0f\x8c\x4f\x48\x7c\x0a\xd8\x3c\x2a\x22\x46\xaf\xb4\xb8\x08\x11\x0d\x93\x7f\x09\x88\x7c\x26\x3c\x1e\x53\x96\xc3\x60\x69\x3e\x06\x8d\xdb\x4a\x78\x42\x64\x3c\x2c\xde\xac\x86\xa7\x86\x1f\x0b\x89\x37\xeb\xe1\xa9\x93\xa9\x28\x38\xbc\x0f\x76\xc7\x9f\xa6\xcc\x82\xc2\xa3\xbc\x35\x06\x79\x8d\x81\xbf\x3f\x1b\x54\x9d\x24\xaf\x33\x45\x2f\x25\xb0\x37\xfd\x3a\xc0\x62\x1f\xd4\x99\x9c\x38\x4d\xa1\x28\x95\xa3\xf2\xce\x66\xb2\x0f\x4a\xfd\x3f\xc5\x6e\x6f\x99\x7e\x94\xe2\x3e\x0e\x69\xaf\x2e\xa0\xb8\x07\x25\xba\x65\x79\x01\xc5\x3d\x2c\xd2\x51\xdf\x2f\xa2\xb8\x07\xa5\x1a\xea\xfb\x65\x14\xf7\xc9\x15\xdf\x75\xa1\xf0\x5c\x79\x9e\x7b\x50\xe4\x34\xff\x7d\x84\xe7\x1e\x46\xc8\x47\xf9\xef\x23\x3c\xf7\xb0\x39\xa3\xf9\xef\x3d\x9e\xfb\x88\xcb\x2f\xfc\xf7\x4e\x5b\xf8\xef\x8d\xb6\xf0\xdf\x23\x07\xbb\xf0\xdf\x17\xfe\xfb\x54\x5b\xf8\xef\x0b\xff\x7d\xe1\xbf\x2f\xfc\xf7\x85\xff\xbe\xf0\xdf\x07\xda\xc2\x7f\x5f\xf8\xef\x0b\xff\xbd\xd1\x16\xfe\xfb\xc4\x50\x16\xfe\xfb\xc2\x7f\x5f\xf8\xef\x0b\xff\x7d\xe1\xbf\x0f\x3c\xf2\xbb\xf0\xdf\x5b\x20\x74\x90\x04\x3f\x02\xc7\xd6\xdf\x9f\x32\x93\x04\x1f\x94\xb9\xc3\x69\x12\x7c\x50\xed\xa0\xd4\xc0\x77\xfc\x44\x31\xe1\xc3\xd0\x6b\x93\x21\x3f\x8b\x09\x3f\x02\x9a\x0f\x7c\x2b\xfd\x67\x7e\xfb\x3c\x34\x18\xf2\x97\x32\xe1\xc3\x2e\xc0\x17\x26\xfc\xc2\x84\x5f\x98\xf0\x0b\x13\x7e\x61\xc2\xdb\xb6\x30\xe1\x17\x26\xfc\xc2\x84\x5f\x98\xf0\x0b\x13\xbe\xd7\x16\x26\xfc\xa0\xba\x0b\x13\x7e\x61\xc2\x2f\x4c\xf8\xba\x2d\x4c\xf8\x76\x5b\x98\xf0\x0b\x13\x7e\xa4\x2d\x4c\xf8\x2f\xc3\x84\x0f\xde\x22\x8c\x71\x65\x93\xfb\xae\xfe\x71\x9b\xe9\x88\x89\xc2\x9d\x16\x54\xa2\x38\x61\xaf\x52\x19\xab\xed\x0e\x82\x97\xc5\x3b\x41\xb9\xa0\xea\xfc\x23\x65\x34\x2f\x07\xb9\x9f\x53\x10\xfb\x38\xb0\x7e\x44\x92\xa9\x63\x72\xc4\xe4\x61\x48\xf8\x54\xf1\x89\x8c\xec\xb2\xb0\x2b\xd8\xbe\x77\x9c\x67\x48\x86\xe0\x92\x51\x17\xd0\x26\xa3\xec\xf0\x02\x85\x1a\xec\x7d\x4a\xb7\x84\xbc\x10\xc1\xc3\x93\x49\x4f\x3f\x20\xd3\xbb\x3b\x5e\x3a\x34\xab\x3f\x8a\xcf\xd1\xc1\x4a\x18\x89\xf5\x13\x12\xc6\x56\xea\xba\x1a\xe1\xdc\x79\x29\x25\xfe\x50\xee\xb0\x72\xea\xef\x7f\x49\xd9\xf7\x5c\xdc\x3f\x0c\xce\xc3\xb8\x9d\x4e\x28\x74\x32\xe6\xdd\xfc\xa9\xfd\x3b\x64\x80\xf5\xe0\xea\xea\x3d\xd4\x58\x1c\xbd\x7b\x4d\xef\xec\xdd\x0c\x9b\xa8\xf7\x68\xc7\x02\xb1\x21\x25\x11\x54\xd1\x84\x64\xf7\x69\xda\x3f\x37\x0a\xdb\xdc\xae\xd7\x7b\x46\xb2\xb3\xa2\x49\x6f\xc2\xc2\x1f\xa4\x39\x39\xe0\xbb\x32\xcb\xde\xf1\x8c\x26\xbd\x89\x0a\x3a\x62\xf5\xb9\x0f\x98\x08\xec\x2f\xe4\x40\x12\x35\x19\x65\xfb\x7b\x42\xc6\x0f\x6f\xf0\x84\x59\x57\xd8\x98\xff\x84\x7d\x27\xe7\x8c\x2a\xae\xbb\x9f\x13\xb3\xc9\x01\xd9\xe0\x72\x1f\x5d\xa8\x63\x38\xd6\xf8\xf2\x29\x04\xcf\x51\x1d\xb1\xbc\x28\x40\x56\x59\xd5\x85\xe1\x65\x3a\x7a\x27\xf8\xa3\xb5\xe3\x25\xea\x65\xa3\x45\xf0\xbc\xd2\x37\x22\xb1\xb9\xfc\x37\x63\xc2\x51\xc6\xf8\x43\xef\x6a\x3d\x6b\xc3\x51\xa5\xb2\x5a\x6c\x30\x68\xfe\x2c\xce\x6f\x97\xd5\x08\x2c\x32\x9a\x90\x17\xbc\xec\xfb\xfc\x65\x8b\xae\x3a\x5d\xe9\x8a\x6b\x55\x33\x2f\xdc\x4b\x54\xef\xfd\xd3\xd5\x04\xd8\x03\x62\x04\x49\x53\x4c\x88\xf0\x75\x35\x8a\x6e\xd6\x3b\xe6\x7a\x19\xcd\xe9\x70\xc2\x11\xef\x72\x13\xee\xd6\x1a\xce\xf5\x1b\xd3\xa1\xbb\xb8\x73\xe7\x04\x39\xf9\xa4\xb7\x24\x20\xb9\x36\xaf\xae\x0a\xfc\xbb\x63\x95\x91\x06\x7b\xf6\x69\x3e\xfc\xc8\xcd\x29\xee\x9e\x6f\xe1\xa8\x54\x21\xb7\x77\x77\x0f\xe5\x0e\x05\x43\x85\x72\x43\xf9\x5d\xca\x13\x79\x97\x70\x96\x60\xa1\xcc\x7f\xf6\xf4\x50\x0a\x93\x1a\xdf\xe5\x84\x91\x03\xae\x5d\x97\xeb\xaa\xcb\x75\x65\xd1\xbb\xeb\xb9\x01\xc1\xbd\x6f\xf7\x5b\x5a\xf6\xbd\xeb\xb2\x6b\x5b\xbb\xdd\xcf\xb6\xad\xa8\x5e\xa7\x7a\xbd\x87\x4a\x36\x95\xc0\x73\xaa\x74\xad\xb6\xe7\x02\x48\xed\x75\x2b\xa0\x4a\x17\x9f\xa4\xcc\x02\xf4\x06\xc5\xc1\xcd\xbe\x79\x49\xcf\xbe\x4f\x89\x9f\xf4\xba\xa2\x2a\x3b\xd7\x15\xf0\xca\xbe\x26\xfb\x48\xa5\xff\x5d\xfc\xea\x17\xce\xcd\x8c\xad\x5d\x8d\x3b\xd8\x8b\x29\x6e\xff\xe6\x3c\x22\x78\x6b\x7e\xa9\x24\xf0\x40\xa5\x12\x83\xe9\xe3\xa8\xc3\x08\x2c\xb8\xd4\x91\x76\xfe\x47\x15\xe9\x65\x06\x13\x9f\x09\x6f\x13\x5e\xff\x81\x1b\x5e\xbf\xde\x2d\x45\xa2\x03\xb5\xdb\x54\xee\x93\x64\x28\x54\x8f\x19\x36\x31\xef\xe7\xce\xcf\x4b\x74\x66\xf1\x64\xd6\xb1\x4a\xc4\x0e\x56\xf1\x0c\xc5\x70\x81\xdf\xa5\x51\x35\x56\x97\xc3\xac\xae\x65\xf3\xf3\xdd\x5d\x23\x90\xab\xf6\xde\x3d\x2d\x78\x6a\x0f\xff\x3f\x56\xb2\x0c\x56\xae\x14\x31\x6f\x9f\x2a\xee\x7b\x41\x19\xc0\x88\xf4\x92\x52\xee\x57\xbd\x1a\xef\xe2\x2a\x61\xb8\x3f\xdf\x56\x70\xf9\x0a\xf7\x7b\x4c\xd4\x77\x50\x4a\xcf\xef\x1b\x41\xdd\x2a\xc0\xfa\x5b\xff\xbf\xef\xfa\x78\xd0\x78\x5a\x66\xfb\x1b\x8e\xcd\x2d\x43\xbc\x32\x0f\x02\x65\x29\x4d\xaa\xd3\x6f\x3b\x2c\x2b\x43\x9b\xc1\xe8\x3a\x0e\x69\x59\x78\xd6\x3c\x68\x29\x48\x0d\x11\xd2\x7d\x81\x68\x63\x22\xdd\xfe\x37\x7e\x2c\x48\x04\xc2\x5b\xee\xd8\x78\xb8\x82\x77\xe6\x8d\xdd\xfa\x8a\xc1\xf1\xdf\x72\xcb\xcb\x0b\x70\xb3\x26\x36\xa2\xe0\x29\x7c\xcb\x48\x3f\xd4\x67\xee\x76\x5c\xad\x33\xf7\xda\x15\x3d\xe6\x1d\x4a\x5d\xb9\x67\xc3\x0e\x5b\xeb\x01\xcf\xf5\xcb\x51\xee\x9c\xdf\x20\xe0\xab\xa9\x03\x2f\x7f\x50\x6a\x8f\x38\xbf\x71\x9c\x16\x9e\xef\x28\xb3\x8a\xd9\x0e\xfd\x54\x9a\x3e\xfd\xe1\x47\xf0\xad\x49\xfd\x90\x51\xe9\x12\xc3\x8e\x1f\xfa\xb7\xac\xfb\xa7\xc8\x23\x7e\xcf\x00\xb3\xfb\x64\x40\xe9\xa1\xa3\xfc\xc6\xb9\xfc\xab\x5f\x4a\x92\x6d\xe0\xa5\xdb\xed\xb5\x48\x77\x69\xf4\x47\x65\x7b\xaf\x8e\x3c\xd2\x2c\x4d\x88\xb0\xb9\x84\x5d\xe2\x20\xb9\xf5\x09\x4b\xa6\x4a\x08\xab\xc2\xc7\x88\x81\xcd\xcc\xdb\xf7\xdf\xa1\x20\x42\xd1\xa4\xcc\x74\x4a\x4c\x14\x1e\xb8\x38\x5f\x64\xfb\xda\x21\x3f\x60\xc2\x59\xe8\x97\xc5\xdb\x01\xb1\xfb\x99\xe6\x6c\x98\xb0\x8b\x82\x3a\x8e\x18\xcd\x71\xe4\x34\xa8\xb1\x1c\x6e\xdc\xcf\xf4\x39\xef\xe4\x7b\x1f\x53\xaa\x45\xdb\x4a\x98\xc2\x5f\x9a\x51\xbd\x59\x43\x2d\x21\xf7\xb6\x11\x99\xab\x55\xb9\x81\x7f\x3b\xfb\x3c\xce\xe4\x74\x16\x52\x0f\x88\x94\x58\xfd\x9e\xae\x5f\x1c\x56\x62\x63\x99\xef\xb9\xc0\x13\x0a\xb8\x49\xb9\x01\xe7\x0d\x33\x74\xf0\x8b\x4e\x74\xfb\x0f\x14\xdc\x38\x19\xc3\x83\xa5\x2c\xba\x25\x66\x08\xb9\x3b\xbd\x2d\x20\x71\xbf\xc1\xfb\x15\xdc\x58\x9a\x29\xcd\x73\x4c\x29\x51\x98\x05\xcf\x75\x7c\xb5\x64\x68\xad\xc3\x9d\x37\xea\xb8\x3f\xfc\xd3\x88\xcb\x84\x79\xdb\x46\xd5\x08\x3f\xf9\xc9\xf0\x11\x5b\xc1\xd0\x52\x14\x3b\x91\xb0\xda\x0e\x83\xbc\xa2\xe0\x0f\x3b\x37\x18\x19\x8d\x93\x30\x1f\x08\xbd\xbb\x04\xa4\xfe\x55\xfb\x1a\xd1\xa9\x9a\x59\x47\x76\x8d\x5c\xb0\x8a\x26\x33\xe2\x2e\xb2\x35\x94\x18\xad\xeb\x23\x85\xd6\xd5\x0e\x4a\xd7\xba\x57\x23\x5a\xad\xcb\xcd\x2a\xbe\x75\x63\x40\x7c\x3b\x91\x7c\x36\x3a\xa8\xce\x25\x07\x73\x6e\xe1\xf4\x9c\x64\xc5\x91\x3c\xaf\xaf\x99\x28\xb2\xb6\x39\x63\xf3\xb6\xab\x04\xd2\x2d\x28\xe1\x0e\xe7\xa4\xe2\x82\x1c\xd0\x5d\xf9\x9f\x00\x00\x00\xff\xff\xaf\xe3\x0b\x76\x9b\xad\x00\x00")

func installerKubeshieldIo_identityserversYamlBytes() ([]byte, error) {
	return bindataRead(
		_installerKubeshieldIo_identityserversYaml,
		"installer.kubeshield.io_identityservers.yaml",
	)
}

func installerKubeshieldIo_identityserversYaml() (*asset, error) {
	bytes, err := installerKubeshieldIo_identityserversYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installer.kubeshield.io_identityservers.yaml", size: 44443, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"installer.kubeshield.io_identityservers.yaml": installerKubeshieldIo_identityserversYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"installer.kubeshield.io_identityservers.yaml": {installerKubeshieldIo_identityserversYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
