// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// installer.kubeshield.io_identityservers.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _installerKubeshieldIo_identityserversYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x8f\xdc\x38\x72\xfe\xee\x5f\x51\x98\x04\x98\x99\xa0\xbb\xc7\xce\x06\x87\xa4\x77\xb1\xc1\xc4\xf6\x1e\x06\xeb\xf5\x19\x1e\x67\x0f\xc8\xe2\x02\xb0\xa5\x6a\x35\x6f\x24\x52\x26\xa9\x1e\xf7\x06\xf9\xef\x01\x5f\xf4\x2e\x4a\x54\x7b\xbc\xbe\xcd\x89\x5f\xec\x91\xd4\xc5\x62\xb1\x58\x2c\x3e\xf5\xa8\x9b\xe4\xf4\x67\x14\x92\x72\xb6\x05\x92\x53\xfc\xa4\x90\xe9\xbf\xe4\xe6\xe1\x5f\xe5\x86\xf2\x9b\xe3\x8b\x1d\x2a\xf2\xe2\xd9\x03\x65\xf1\x16\x5e\x16\x52\xf1\xec\x3d\x4a\x5e\x88\x08\x5f\xe1\x9e\x32\xaa\x28\x67\xcf\x32\x54\x24\x26\x8a\x6c\x9f\x01\x44\x02\x89\xbe\xf8\x81\x66\x28\x15\xc9\xf2\x2d\xb0\x22\x4d\x9f\x01\xa4\x64\x87\xa9\xd4\xcf\x00\x90\x3c\xdf\xc2\x91\x14\xa9\x7a\x06\xc0\x48\x86\x5b\xa0\x31\x32\x45\xd5\x49\xa2\x38\xa2\x90\x1b\xca\xa4\x22\x69\x8a\x62\xf3\x50\xec\x50\x1e\x28\xa6\xf1\x86\xf2\x67\x32\xc7\x48\x0b\x49\x04\x2f\xf2\x2d\xf8\x1e\xb3\x62\x5d\x77\x11\x51\x98\x70\x41\xcb\xbf\xd7\x50\x3f\xec\x2e\x90\x3c\x97\x11\x8f\xd1\xfc\x69\xc7\x7b\xe7\x34\xba\x37\x1a\x99\x1b\x29\x95\xea\xc7\x81\x9b\x6f\xa8\x54\xe6\x81\x3c\x2d\x04\x49\x7b\xa3\x31\xf7\x24\x65\x49\x91\x12\xb1\x6d\xf4\xce\x73\x14\x44\x71\x2d\x3d\x17\x68\x9e\xfe\x4f\xf6\xc0\xf8\x23\xfb\x41\xdf\x96\x5b\xd8\x93\x54\x6a\xad\x64\xc4\x73\xdc\xc2\x5b\x3d\xaa\x9c\x44\xa8\x15\x3f\x92\x94\xc6\xc6\xdc\x76\x5c\x3c\x47\x76\xfb\xee\xee\xe7\x6f\xee\xa3\x03\x66\xc4\x5e\xd4\x92\x75\x37\xaa\x1a\xbe\x9d\x81\x6a\xee\xab\x6b\x00\x31\xca\x48\xd0\xdc\x48\x84\x4b\x2d\xca\x3e\x03\xb1\x9e\x6d\x94\xa0\x0e\x08\x47\x7b\x0d\x63\x90\xa6\x1b\xe0\x7b\x50\x07\x2a\x41\xa0\x19\x03\x53\x46\xa5\x86\x58\xd0\x8f\x10\x06\x7c\xf7\x57\x8c\xd4\x06\xac\xd1\x24\xc8\x03\x2f\xd2\x18\x22\xce\x8e\x28\x14\x08\x8c\x78\xc2\xe8\xaf\x95\x64\x09\x8a\x9b\x2e\x53\xa2\xd0\x59\xb8\x6c\x94\x29\x14\x8c\xa4\xda\x08\x05\xae\x80\xb0\x18\x32\x72\x02\x81\xba\x0f\x28\x58\x43\x9a\x79\x44\x6e\xe0\x27\x2e\x10\x28\xdb\xf3\x2d\x1c\x94\xca\xe5\xf6\xe6\x26\xa1\xaa\xf4\xf6\x88\x67\x59\xc1\xa8\x3a\xdd\x44\x9c\x29\x41\x77\x85\xe2\x42\xde\xc4\x78\xc4\xf4\x46\xd2\x64\x4d\x44\x74\xa0\x0a\x23\x55\x08\xbc\x21\x39\x5d\x1b\xc5\x99\x32\x4b\x26\x8b\xff\x41\xb8\xa5\x21\x2f\x1b\x9a\xaa\x93\x9e\x36\xa9\x04\x65\x49\x75\xd9\x38\x98\xd7\xee\xda\xc3\x80\x4a\x20\xee\x63\x56\xff\xda\xbc\xfa\x92\xb6\xca\xfb\xd7\xf7\x1f\xa0\xec\xd4\x4c\x41\xdb\xe6\xc6\xda\xf5\xc7\x64\x6d\x78\x6d\x28\xca\xf6\x28\xec\xc4\xed\x05\xcf\x8c\x44\x64\x71\xce\x29\x53\xe6\x8f\x28\xa5\xc8\xda\x46\x97\xc5\x2e\xa3\x4a\xcf\xf4\xc7\x02\xa5\xd2\xf3\xb3\x81\x97\x84\x31\xae\x60\x87\x50\xe4\x31\x51\x18\x6f\xe0\x8e\xc1\x4b\x92\x61\xfa\x92\x48\xfc\xe2\x66\xd7\x16\x96\x6b\x6d\xd2\x69\xc3\x37\x43\x55\xd9\x86\x96\x87\x6e\x26\x2e\xb5\xae\x00\x64\xe4\xd3\x1b\x64\x89\x3a\x6c\xe1\x0f\xdf\x74\xee\xe5\x44\x69\x97\xdc\xc2\x7f\xff\x42\xd6\xbf\xfe\xe5\xea\x97\x35\x59\xff\xfa\x7c\xfd\x6f\x7f\xf9\xa7\x5f\xdc\x7f\xae\xff\xfd\x1f\x3b\x9f\x19\x54\xb2\xbc\x6c\x27\xb0\xba\x5c\x46\xbe\x41\xa7\x69\xc7\xa3\xfb\x1c\x23\xed\x41\x7a\x1a\xf5\xc7\x60\xcf\x05\x08\x8c\xa9\x2c\x57\x6f\xc0\xf8\xc9\xde\x44\xf8\x53\xd7\x06\xed\x7e\xf7\xa6\x03\xba\xa7\x18\xaf\x4c\x7f\x39\x8f\x2f\xa5\x59\xc0\x71\x91\x6a\x57\x8d\x38\x93\x4a\x10\xca\x94\xec\x5a\xcc\xd3\xb3\xb1\x3e\x8f\xf1\xd6\xa3\x41\x4f\x8b\x57\xe6\x8f\x1d\x4a\xf3\xb1\x4a\xf3\xa6\x16\xa2\x48\x51\x1a\x3b\x38\x25\x37\x03\x42\xc7\x14\xb2\xf7\x71\x8f\x42\x60\xfc\xaa\xd0\x33\x76\x5f\x89\xbf\x4b\x18\xaf\x2e\xbf\xfe\x84\x51\xa1\x3a\xa1\xd5\xab\xfb\x07\x3d\x47\x56\x10\x0a\x78\xa4\x69\xea\xba\xd1\xc1\xaf\xbc\xa1\x15\x36\xd1\x50\x8f\xaf\x6b\xc6\xba\xa9\x03\x51\x20\x89\xa2\x72\x7f\x32\xe3\xac\x2c\x81\x9f\x74\x14\x30\xbb\x7b\x3d\x61\xb0\x3b\xb9\x00\xa0\x37\x9b\x95\x57\xec\xae\x50\x40\x95\x89\x1a\xd1\x81\x73\x89\x40\xac\xa1\x4d\x7f\x47\xca\x4d\x7c\x06\xce\x10\xb8\x80\x4c\x2f\x77\xb3\x27\xa0\x57\x62\x43\x9d\x8d\xb1\x40\x2d\x8e\x4a\xc8\xb8\x54\xb5\xad\x4b\x47\xd6\xe2\x1f\xa9\x3a\x8c\x8c\x1e\x21\xd1\xf9\x07\x4a\x05\xb2\xc8\xb4\x12\x8f\x48\x93\x83\x92\x2b\xa0\x1b\xdc\x98\xe9\x47\x12\x1d\x1a\xdd\x65\x88\x3d\xbf\xac\x1b\x49\x53\x37\x94\x96\x2f\xe1\xc7\x82\x0a\xcc\x74\x50\x85\xab\x2a\x02\xbb\xa8\xb8\x2a\xef\xf7\xbc\xc4\xdf\xcd\xc0\x34\xad\x00\x55\xb4\xb9\x5e\x41\xc4\xb3\xbc\x50\xda\xe6\x7a\x4c\xbb\x13\x50\xa5\x93\x06\xbb\x0b\x08\x5e\x24\xe3\x16\xc1\xd4\x29\x5a\x6e\xd3\x66\xb2\xcd\x7e\x49\xe2\x58\x4b\xb9\xb0\x46\xba\x28\x77\x5b\x59\x64\x5e\x89\xd4\x1a\xc3\xd8\x2f\x23\x2a\x3a\xb8\xa4\x20\xe2\x42\xa0\xcc\x39\x33\x12\xcd\x9d\xd7\xf5\x58\xbe\x1d\x75\x06\x2d\xec\x4a\x5e\x9b\xc9\x35\xc2\x0e\x34\x39\x94\x73\x48\x04\x9a\x6b\x6d\x9f\x18\x5a\xbc\x46\x3d\x85\x99\x67\xed\x42\x77\xe1\xdd\x32\xc0\x2c\x57\xa7\x86\xa7\x35\xe6\x58\xa1\xc8\xaa\x11\x12\x93\xc1\xfa\x9a\x8d\xd3\xd2\xea\x4f\xb3\x3c\xa5\x11\x55\xce\xf3\xe0\x39\x5c\x19\xd7\xa3\xea\x52\x9a\x65\xb3\xe6\xf9\xf5\x06\x6e\xcb\xb4\xd8\xd7\xa6\x95\x62\xbc\xea\xd9\x75\xa1\x15\x95\x7c\x44\x68\xd5\xbf\xf7\x99\xa9\x08\xd8\x54\x0e\x59\xd4\xdb\x20\xdb\xad\x6d\x6f\xeb\x35\x12\x53\x8c\x94\x8e\xc3\x28\xb2\x15\x10\x29\x79\x44\x75\xda\x50\xcd\xff\xa8\x48\xe8\xb8\x9a\x35\xb3\x7f\x40\xe1\x83\x02\xb3\xbf\xb7\x1d\x77\xea\xf9\xde\x10\xf5\x09\x41\xaf\xb4\xf6\x50\x9b\x01\x63\x52\x22\xe8\x35\xae\x3f\x7f\x29\xdd\xa1\x69\x7c\x74\x30\xed\xf7\x5e\x75\xbd\x6a\xba\xfc\xd3\xdd\x09\x10\xec\x36\x1f\x9d\xc3\x11\xca\xa4\xcb\xb9\x57\x40\xe0\x01\x4f\x36\x3d\xd7\x27\x00\x77\xde\x31\x0f\x07\x49\x15\x68\x37\x17\x1d\x03\x1e\xf0\x64\x04\xb9\x7c\x3e\xe0\xf3\xe1\x33\x6f\xdb\x03\x0e\x26\x1b\x43\xad\xb7\x89\x9b\xb9\x32\x3a\x1a\x4b\x98\x48\x3a\xc7\x7e\x60\x0f\xc6\x29\x45\x93\x57\x07\x7e\xc6\x93\x41\xfa\x5b\x39\x05\x67\x8d\xf3\x7d\x75\x98\xb0\x13\x7b\x29\xed\x04\xe9\xb5\x72\xa0\x79\xf0\x38\x15\x37\xde\x65\x96\x4a\x79\x3a\xfb\x59\x9f\x66\x2b\xf5\xa4\x89\xfc\x77\xcc\x9f\x95\x74\xdb\x5b\xae\xee\xd8\x0a\x5e\x7f\xa2\x52\x6f\xf8\xaf\x38\xca\xb7\x5c\x99\x3f\x37\xf0\x47\x65\x7d\xf0\xcd\x44\xa8\x68\xa8\x38\xd7\xb0\x76\x1c\x67\x99\xf5\x96\x01\x11\x82\x9c\xb4\x39\x9a\x67\x3e\xb9\xd1\x09\xf6\x74\x48\xac\x5b\xb5\xc0\xa8\xd4\xa7\x30\x2e\x4a\xb3\x98\x93\xbb\x91\x69\xbb\x0a\x96\x98\x15\xd2\x1c\xee\x18\x67\x6b\xb3\x5f\x96\x3a\xb5\xfa\xb2\x56\x0f\x57\x53\xb4\xe6\xa7\xaf\x5e\xd9\x6d\xb0\x44\xbf\x6a\x7f\x54\xba\xbb\x37\xad\x4e\xc2\x17\x64\xad\xcc\x81\x1c\x4d\x12\x46\x59\x92\x56\x69\xd5\x0a\x1e\x0f\x34\x3a\x98\xbc\x3d\x58\xe8\x0e\x2d\x7c\x91\x0b\xd4\xfb\x1e\x91\x3a\x34\xea\x2b\x09\x0a\x9d\x0e\xd3\xd2\x08\x34\x5c\x51\x81\x79\x4a\x22\x8c\x21\x36\x49\xa7\x05\x0f\x88\xc2\x84\x46\x90\xa1\x48\x50\x9f\x4f\xa3\x43\xa8\xf7\x07\x6f\x28\xb6\xcd\x5e\x2c\xe5\x47\x42\x7d\xb1\x4c\xa9\x43\x54\x5a\xeb\xc8\x14\xf4\x5c\x03\x7e\x0b\x53\xb7\x73\x24\x1f\x7f\x38\x64\x6c\x26\xe1\x70\x58\xdf\x57\xce\x35\xcc\xb9\x60\xc9\x35\x96\x5c\xc3\xdb\x96\x5c\xa3\x6c\x4b\xae\xb1\xe4\x1a\x4b\xae\xb1\xe4\x1a\xbf\xa3\x5c\x23\x50\xa8\xc5\x53\x66\xc0\x3a\x7f\xb6\x38\x57\x17\xc7\x31\x89\x4d\x59\xa9\x6a\x41\x36\x13\x23\xd2\x69\xc2\xbd\xdb\xcb\x3e\x18\x88\x88\x32\x23\x44\x10\x96\x20\xbc\x58\xbf\x78\xfe\x7c\xdc\xb3\xf6\x5c\x64\x44\x6d\xb5\x97\x7f\xf3\xcf\x01\x36\x71\xab\xc1\xfb\xe4\xb4\x3f\xac\x1b\x88\xd8\xc8\x43\xd6\xb6\x7e\xb4\x76\x7a\x86\xa6\x26\xdb\x87\x3c\x7f\x46\x7d\xc2\x45\xb9\x0a\xa2\x6e\x81\xdf\xbd\x52\x82\x77\x70\x0e\x75\x16\x3a\xb8\x2b\xc8\x50\x01\x51\x2d\x68\x93\x66\x58\x15\x90\x6c\x19\xc4\x56\x15\xbd\x12\xcb\xda\x48\x0c\x9c\x39\xe4\x5a\xfb\xce\x26\x50\x63\x7f\xb5\xa3\x59\x14\x81\x08\x89\x44\x9d\x43\xec\xb0\xd2\x9a\x67\x5a\x4b\xca\x54\x19\x00\xb5\xca\x58\x5a\xd5\x2b\xf8\x0a\x37\xc9\x06\xe2\xc2\x88\x23\xcc\x95\x4b\xaf\xed\xa8\xe5\x49\x2a\xcc\x4c\x8d\x85\x0b\xf3\x8f\x1e\xbe\x12\x27\x50\x7e\x44\x17\x8f\xc8\x54\x41\xd2\xf4\x04\x78\xa4\x91\xaa\xec\x67\x2a\xba\x54\xd9\x7a\x98\x6f\xb5\x84\x24\xac\xdd\xd5\x38\x1a\xa7\x3b\xe9\x9b\x75\xc5\x8d\xf7\xa4\xa2\xb4\x3c\x53\xfe\x19\x5f\xa4\xfa\x31\xe3\x39\x7f\x7a\xef\x47\xfe\x21\x6c\x23\xe9\x9e\x49\x8a\x34\xd5\xf6\xb6\x85\x80\xbe\x7a\x25\xd8\x3e\x19\xb3\x4a\x28\xde\x56\xb3\x5a\x1e\x67\xeb\x47\xb6\x92\x71\xfb\xf6\x95\xb6\xc8\xd4\x90\x01\x3e\xf0\x9c\xa7\x3c\x39\x35\x6d\x6f\x56\xbf\x29\x30\x38\xc9\x04\x64\xb1\x73\x99\xed\x74\xe2\xf6\xb6\x33\x95\x0b\x66\xbe\x9c\x63\x87\xda\x72\x8e\xed\xb5\xe5\x1c\x1b\xa8\xe2\x72\x8e\x35\x6d\x39\xc7\x2e\xe7\xd8\xc9\xb6\x9c\x63\x07\x1e\x5e\x30\xf3\x25\xd7\x18\x69\x4b\xae\xd1\x6b\x4b\xae\xb1\xe4\x1a\x4b\xae\xb1\xe4\x1a\xa3\x6d\xc9\x35\x06\x1e\x7e\x32\xcc\x7c\x5a\xdc\x94\x79\xd6\x7d\xa0\x6d\x14\x01\xf6\xaa\x34\x7a\x3b\xe7\xf1\x19\x94\xfa\x9c\xc7\x23\x8c\x7a\x0b\x6a\x46\x7c\x9d\xf2\x88\xa8\xe1\x78\x60\xe0\x54\x2d\xc6\x21\xf9\x92\x64\x16\xab\x5d\xc1\xaf\x9c\xa1\x65\x3a\xeb\x65\x66\x90\x55\xae\x0e\x28\xf4\xe3\x57\xf2\x7a\x90\xa9\xba\xb0\xf4\x07\xdb\xc2\xd2\x5f\x58\xfa\xae\x35\x59\xfa\x07\x22\xad\x5f\xda\x8d\xd0\x4f\xda\x6f\x44\x07\x1d\x80\xbe\x1d\xd5\xf7\x2b\x71\xf6\xb5\x13\x3a\x67\x31\xef\x14\xd6\x13\x6f\xc7\x15\xbb\x72\x24\xc6\xef\xda\xa3\x19\x89\xde\xf6\x0c\x67\x94\x26\x71\x8c\x31\xe4\x28\xd6\xd6\xf5\x38\xec\x29\x8b\x07\xc6\x52\x8e\xdf\x2b\x36\x90\x47\xdf\x56\x72\x46\xe9\xa2\x59\x5d\x69\x05\xe8\x2e\xab\x7e\x62\x2f\xac\xe6\xef\x4b\xb2\xea\xcd\xc9\xab\xdc\xdc\xe6\x1f\xd9\xcd\xb9\xed\x63\x81\xe2\x04\xfc\x88\xa2\x3e\x99\x54\x2f\x5c\x86\x1c\x42\xcc\xde\x43\x25\x44\x44\xda\x40\x3d\x9d\x6a\xcd\x3b\x9d\xce\xaf\x83\xf4\x06\xdb\x15\x61\x4f\xf9\x25\x66\x61\x0c\x11\x98\xbd\x0d\x42\x1b\x03\xc5\x29\x22\x42\x53\x78\x5b\xba\x0a\x7a\x78\x56\x72\x3a\x38\xdb\x1e\xc8\x23\xfc\x58\xd0\x28\xe3\x4d\xc0\x1e\xe1\x32\x3b\xf0\xc8\x67\x42\x1f\x70\x06\xfc\x01\xf3\x20\x10\xe8\x9a\x57\x6b\xe9\xf6\xe9\x3e\x1a\x32\x43\x68\xc3\xbf\xe6\x23\x22\x70\xde\x79\x64\x3e\x32\x02\xdd\xe1\x57\xd3\x27\x7a\x30\xc9\xac\xc1\x37\x21\x15\x3f\x54\x32\x4b\x64\x0f\x56\x69\xc3\x25\xc6\xb7\x5a\x88\xc9\x97\x36\xf6\x3c\xb4\x04\xba\xa6\x76\x58\x01\x35\x47\xe7\x0e\x76\x32\xcb\x30\x6d\x9c\xc5\x8b\x9f\xcc\x92\xe9\x03\x33\xda\x18\xca\x6c\x91\x7d\xbc\xa5\x87\xa3\x3c\x8d\x9a\x4e\xc5\x1a\x88\x98\x25\xd6\x7e\x53\xc3\x53\x82\x11\x30\x1f\x90\x80\x73\xfd\x72\x2e\x30\x01\x33\xc1\x09\x98\x01\x50\xc0\x5c\x90\x02\xe6\x02\x15\x30\x7b\xbc\x26\x85\x78\xd3\xf8\xae\x95\xa9\xa6\x8f\x17\x7a\xcd\x92\xf4\xdd\xec\xdd\x68\xf6\x0c\xf6\xb3\x1d\xab\xaa\x4d\x74\x32\x92\xeb\x28\xf1\x3f\x7a\x6b\x36\x8e\xff\xbf\xa1\xfb\x28\xa1\x42\xea\x54\xd8\x81\x7f\x0d\x09\x25\xe6\xd0\xe8\x2c\x50\xa8\xd6\x86\x4a\xd0\xbe\x73\x24\xa9\x4e\x40\x2c\x6d\xcb\x1d\xd5\xb4\xa6\xdd\x7c\x2d\x74\x7d\x3f\x1e\xf4\xf1\x5c\x6f\xbe\xf6\x98\x47\x25\x5c\x3c\xe0\xe9\x62\xd5\x8b\x23\x17\x77\xec\x22\x54\x2a\x71\x47\x95\x56\xcc\xa8\x32\x1f\xce\xd2\x13\x5c\x98\x7b\x17\xa1\x0b\x7b\x28\x5d\x9c\x93\x08\x9e\x01\xca\x05\x3d\xcc\xca\x6f\xc1\x99\x5b\x00\xac\x3f\x58\xe1\x2b\xe5\xc1\xb8\xbe\x15\x82\x36\x96\x19\xd4\x7d\x3f\x0f\x82\xab\xea\xb5\xf1\x44\x5b\x5e\x5d\xfb\x8f\xd2\x8d\x21\xb5\x98\x68\x26\xe5\xcf\x90\x30\x09\x17\x25\x7a\x76\x29\x6b\x1d\x2f\x9e\xae\xe2\x38\x6b\x0d\x87\xc7\x22\xe5\x08\x6c\x3f\x86\xa4\xab\x9d\x33\xbe\x43\x0b\xdd\xd7\x03\xed\xb0\x86\x17\x63\xb8\x2a\x4f\xba\xfe\xb3\x77\xdd\xb8\x30\x2c\xca\xd6\xc7\x99\xa2\xeb\x4a\x46\x7d\xfe\xd5\x27\xc2\xd0\xf0\x5a\xd2\x9a\xdb\x1e\x50\x82\x9b\x15\x6e\x57\x7b\x54\xc8\x0a\x7e\x3c\xa0\x68\x8d\x94\x4a\xf7\xb5\x4b\xa6\x02\x21\x0a\xc6\x74\xbf\x9c\x39\x58\x2f\x48\xa4\x0e\x33\xf6\xdb\x83\x1c\x4c\x62\xd3\x7e\x33\x6a\x93\xfb\xd7\xb3\x14\x48\x75\x84\x12\xc0\x34\x5f\xe9\xe4\x38\x93\x9c\xb9\x45\xa4\xaf\x94\x48\x9c\xb1\x0b\xc6\xa1\x96\xa5\xd5\x18\x37\xf0\xda\x2c\x82\xa6\x72\x54\x9a\x99\x24\x69\xca\x1f\x43\xa2\x4f\xb0\x57\x87\xe5\x06\xeb\xa6\x32\x4f\x51\x32\x98\x4d\xb3\x7f\x7c\x62\x9a\x7d\x07\x7a\xfa\x9d\xb0\xec\x03\x41\xbd\x85\x6a\xbf\x50\xed\x1b\x54\x7b\xf3\x21\x1b\xf9\xa6\x39\xf7\x7e\x9f\x31\x5c\xfc\x50\xce\x3d\xfc\xf9\x80\x66\x45\x8d\x00\x6c\x7a\x8a\xb2\x22\x55\x34\xaf\x0b\xd6\xd2\xaa\x96\xda\xe3\xa3\x25\x2a\xc9\x0e\x3a\x3b\xf6\x46\x00\x89\x0e\xdd\x65\x62\xfa\x31\x05\x6d\x69\x22\xb2\x2b\xb3\x90\x34\x75\xdc\x7a\x7d\xae\xf4\xcf\x11\xba\x5a\x15\x7d\x1a\x08\xff\x95\xfb\x2a\xc1\x0a\x34\x31\xc5\x89\x2b\xbd\x59\xa6\xda\x1d\xf4\x96\x55\x46\xb5\xb1\x9a\x6b\x6f\xff\xb5\xa8\xcc\x11\xcb\x02\x49\x42\x8f\xc8\xea\x4d\xf8\x4a\x5e\x5f\x4f\xd1\x9a\x54\x60\xea\xd1\x4f\x2c\x46\x84\x0e\xa5\x1c\xab\xc0\xed\x7e\x44\x6c\x95\x08\x04\x6c\xf3\xdf\x35\x76\xaf\xef\x47\x64\xd6\xc5\x21\xef\x06\x6f\xcc\x53\x6d\xf1\xd5\x04\x8e\x08\xa5\xd3\xa3\x09\xc3\x41\x67\x94\x11\xce\x28\x21\x00\xf5\x87\x13\xdb\xe6\x94\x0f\x7e\xb3\xd7\x27\x02\x4a\x06\x73\x68\x6e\xd3\xe5\x82\xd0\xf3\xdf\xb9\x94\xc7\xd1\x02\xc0\xc2\x79\x1c\x6d\xe1\x60\xff\xff\x3f\xea\xe3\x08\xb8\xff\x37\xca\x81\x3c\x1b\xd4\xff\x2d\xa9\x8f\x63\x40\xfe\xcc\x6a\x17\x4c\x81\xf8\x9f\x49\x00\x9c\x22\x41\x06\xcb\xf4\x80\xf7\xc3\x80\x7c\xb0\xd4\x21\xe0\x7e\x10\x8c\x0f\x96\xb8\x30\x08\x27\x9f\xfb\xda\x0c\xc2\x99\x80\xfc\xb9\x60\xfc\xac\xd9\x99\x0b\xc2\x3b\x78\x3d\x40\x8d\x40\x00\xbe\x0f\xad\x87\x0c\x71\x12\x7c\xef\xc2\xea\x61\xa0\xd3\x18\xf0\x3e\x08\xa9\x07\x88\x1d\x06\xdd\x3f\x2b\x9d\x0a\xf6\xce\xc0\x07\x43\x21\xf4\xf9\xf0\x79\x00\x97\x60\x06\x74\x5e\x02\xe3\x13\x12\x9f\x02\x36\x0f\x8a\x88\xc1\x2b\x2d\x2c\x42\x04\xc3\xe4\x5f\x02\x22\x9f\x09\x8f\x87\x1c\xcb\x61\xf0\x68\x3e\x06\x8d\xdb\x93\xf0\x84\xc8\x70\x58\xbc\x79\x1a\x9e\x1a\x7e\x28\x24\xde\x3c\x0f\x4f\x55\xa6\x82\xe0\xf0\x3e\xd8\x1d\x5e\x4d\x99\x05\x85\x07\x79\x6b\x08\xf2\x1a\x02\x7f\x7f\x36\xa8\x3a\x49\x5e\x67\x8a\x9e\x4b\x60\x6f\xfa\xb5\x87\xc5\x3e\xa8\x33\x39\x72\x1a\x43\x5e\x28\x47\xe5\x9d\xcd\x64\x1f\x94\xfa\x77\xc5\x6e\x6f\x99\x7e\x94\xe2\x3e\x0e\x69\xaf\xce\xa0\xb8\x7b\x25\xba\x65\x79\x06\xc5\xdd\x2f\xd2\x51\xdf\xcf\xa2\xb8\x7b\xa5\x1a\xea\xfb\x79\x14\xf7\xc9\x15\xdf\x75\x21\xff\x5c\x95\x3c\x77\xaf\xc8\x69\xfe\xfb\x08\xcf\xdd\x8f\x90\x8f\xf2\xdf\x47\x78\xee\x7e\x73\x06\xf3\xdf\x7b\x3c\xf7\x11\x97\x5f\xf8\xef\x9d\xb6\xf0\xdf\x1b\x6d\xe1\xbf\x07\x0e\x76\xe1\xbf\x2f\xfc\xf7\xa9\xb6\xf0\xdf\x17\xfe\xfb\xc2\x7f\x5f\xf8\xef\x0b\xff\x7d\xe1\xbf\x0f\xb4\x85\xff\xbe\xf0\xdf\x17\xfe\x7b\xa3\x2d\xfc\xf7\x89\xa1\x2c\xfc\xf7\x85\xff\xbe\xf0\xdf\x17\xfe\xfb\xc2\x7f\x1f\x78\xe4\xab\xf0\xdf\x5b\x20\xb4\x97\x04\x3f\x02\xc7\xd6\xdf\x9f\x32\x93\x04\xef\x95\xb9\xc3\x69\x12\xbc\x57\x6d\xaf\x54\xcf\x77\xfc\x04\x31\xe1\xfd\xd0\x6b\x93\x21\x3f\x8b\x09\x3f\x02\x9a\x0f\x7c\x2b\xfd\x67\x7e\xfb\x3c\x34\x18\xf2\xe7\x32\xe1\xfd\x2e\xc0\x17\x26\xfc\xc2\x84\x5f\x98\xf0\x0b\x13\x7e\x61\xc2\xdb\xb6\x30\xe1\x17\x26\xfc\xc2\x84\x5f\x98\xf0\x0b\x13\xbe\xd7\x16\x26\xfc\xa0\xba\x0b\x13\x7e\x61\xc2\x2f\x4c\xf8\xba\x2d\x4c\xf8\x76\x5b\x98\xf0\x0b\x13\x7e\xa4\x2d\x4c\xf8\x2f\xc3\x84\xf7\xde\x22\x8c\x71\x65\x93\xfb\xae\xfe\x61\x9b\xe9\x88\x89\xfc\x9d\xe6\x54\xa2\x38\x62\xef\xa4\x32\x76\xb6\x4b\x04\x2f\xf2\x77\x82\x72\x41\xd5\xe9\x27\xca\x68\x56\x0c\x72\x3f\xa7\x20\xf6\x71\x60\xfd\x80\x24\x55\x87\xe8\x80\xd1\xc3\x90\xf0\xa9\xc3\x27\x32\xb2\x4b\xfd\xae\x60\xfb\xde\x71\x9e\x22\x19\x82\x4b\x46\x5d\x40\x9b\x8c\xb2\xe4\x25\x0a\x35\xd8\xfb\x94\x6e\x11\x79\x29\xbc\xc5\x93\x49\x4f\x4f\x90\xe9\xdd\x1d\xcf\x1d\x9a\xd5\x1f\xc5\xe7\xe8\x60\x25\x8c\xc4\xfa\x09\x09\x63\x2b\x75\x5d\x8d\x70\xee\xbc\x14\x12\x7f\x2c\x76\x58\x39\xf5\x0f\x1f\x63\xf6\x03\x17\xb7\x0f\x83\xf3\x30\x6e\xa7\x23\x0a\x9d\x8c\x95\x6e\xfe\xd4\xfe\xed\x33\xc0\x7a\x70\x75\xf5\x1e\x6a\x2c\x8e\xde\xbd\xa6\x77\xf6\x6e\xfa\x4d\xd4\x7b\xb4\x63\x81\xd0\x90\x12\x69\x73\xce\x0b\x28\x02\x13\x2a\x95\x18\x34\xf2\xa8\x23\x09\xcc\xb9\xa4\x8a\x9f\xf1\x51\x45\x92\x99\x9f\xf1\x4f\x59\xa9\xff\xc0\x8d\x52\xbf\xde\x2d\x45\x82\x83\x74\x24\xa8\xa2\x11\x49\x6f\xe3\xb8\x5f\x89\xf3\x7b\xb1\x8d\x80\xb7\x8c\xa4\x27\x45\xa3\x9e\xd9\xfd\x1f\xa4\x19\x49\xf0\x5d\x91\xa6\xef\x78\x4a\xa3\x9e\x69\xbd\x26\xaa\x3e\x77\x8f\x91\xc0\x7e\x68\xf4\xa4\xa5\x93\xfb\x56\x7f\x97\x4d\x79\xf2\x06\x8f\x98\x76\x85\x8d\xad\x48\xff\x6a\xcc\x38\xd3\x73\x44\x59\xcf\x23\xc6\x9c\x96\x24\xc8\x06\x03\xe8\xa8\xdb\x8d\x21\x83\xe3\x01\x29\x17\x3c\x43\x75\xc0\xe2\xac\x2d\xa7\xca\x53\xcf\x0c\xd8\xd3\xfb\x61\x84\x3f\x59\x3b\x9e\xa3\x5e\x3a\x0a\x2b\xcc\x03\x13\x02\x52\xc5\xf3\x7f\x85\xc7\x1f\x04\x8c\x3f\xf4\xae\xd6\xb3\x36\x1c\xa7\x2b\xab\x85\x06\x83\xe6\x0f\x0d\xfd\x76\x79\xa2\xcf\x6d\x97\xa8\xde\xbe\x35\x23\xaa\x0b\xcc\x53\x1a\x91\x97\xbc\xe8\x87\x91\xf3\xe2\x58\x55\x02\xec\x8a\x6b\x1d\xb9\x5f\xba\x37\xfd\xde\x97\x4f\x57\x26\xb0\x2c\x06\x04\x49\x63\x8c\x88\x28\xc1\x1f\x14\xdd\xa3\xd9\xd8\xac\xa7\x34\xa3\xc3\x59\x71\xf8\x2a\x9e\x58\xc1\xad\xe1\x5c\xbe\x31\x1d\xba\x8b\x3b\x57\xcc\xca\xc8\x27\x9d\x37\x01\xc9\xb4\x79\xf5\xd1\xb5\x7c\xc1\xb1\x32\xd2\x60\xcf\xe5\x59\x14\x7e\xe2\x86\x6a\xb0\xe7\x5b\x38\x28\x95\xcb\xed\xcd\xcd\x43\xb1\x43\xc1\x50\xa1\xdc\x50\x7e\x13\xf3\x48\xde\x44\x9c\x45\x98\x2b\xf3\x9f\x3d\x4d\x0a\x61\xce\x6f\x37\x19\x61\x24\xc1\xb5\xeb\x72\x5d\x75\xb9\xae\x2c\x7a\x73\x39\x37\xc6\xba\x97\x42\x7f\x4b\xcb\xbe\x77\x5d\x76\x6d\x6b\x73\xd2\xd9\xb6\x15\xd5\x3b\x7f\x77\x7b\xa8\x64\x53\x09\x3c\xa3\x4a\x61\x6c\xde\xaa\x25\xb5\xd7\xad\x80\x2a\x88\x71\x4f\x8a\xd4\xc3\xc1\x51\x1c\xdc\xec\x9b\x37\x49\xed\x4b\xbf\xf8\x49\xaf\x2b\xaa\xd2\x53\x0d\xd3\xac\xec\xbb\xdc\x8f\xd4\xd2\x72\x08\xab\x7f\x86\xdf\xcc\xd8\xda\x01\x31\x83\xbd\x18\x04\xe6\x6f\xce\x23\xbc\xb7\xdc\xb6\x72\x1b\x45\x43\x91\x65\x6c\xe9\x46\xe6\x9d\xe7\xf9\x99\x89\xce\x2d\x9e\x2c\xea\x5a\x25\x42\x07\xab\x78\x8a\x62\x18\x34\xe9\x52\xd3\x1a\xce\xe0\x70\xc0\x4b\xd9\xfc\x7c\x37\xc8\x79\xb2\xd5\xde\xfb\xbc\x39\x8f\x2d\xa1\xe2\x43\x25\xcb\xd4\x1f\x94\x22\xe6\x8d\x5e\xc5\xcb\x5e\x50\x7a\x70\x37\xed\x01\xca\xfd\x52\x5a\xe3\xfd\x66\x25\x0c\x9f\xea\xbb\xaa\x04\xb1\xc2\xfd\x1e\x23\xf5\x3d\x14\xb2\xe4\x4c\x8e\x20\x99\x55\x11\xe0\xbb\xf2\x7f\xdf\xf7\x31\xb6\xf1\xc4\xcc\xf6\x37\x1c\x4a\x5a\x86\x78\x6d\x1e\x04\xca\x62\x1a\x55\x8c\x02\x3b\x2c\x2b\x43\x9b\xc1\xe8\x3a\x0e\x13\x5a\xc8\xdb\x3c\x68\x69\x5d\x0d\x11\xd2\x7d\x29\x6b\x63\x22\x5d\xb8\x1e\x2f\xb5\x12\x81\xf0\x96\x3b\x86\x23\xae\xe0\x9d\x79\x0b\xba\xbe\x62\x6a\x23\x6f\xb9\xe5\x3a\x7a\xf8\x6e\x13\x71\xd3\xcb\x6c\x68\x19\xe9\xc7\x9a\xc7\x60\xc7\xd5\xe2\x31\xd4\xae\x58\xd6\x11\x7c\xc9\x2b\x2f\x19\xc6\xc3\xd6\x7a\xc0\x53\xfd\xc2\x99\xe3\x4e\x98\xaa\xc2\x6a\xaa\x88\x58\x16\x9f\x6d\xd9\xf8\x5b\xc7\x13\xe2\xd9\x8e\x32\xab\x98\xed\xb0\x9c\x4a\xd3\x67\x59\x50\xf2\xbe\x89\xaa\x1f\x32\x2a\x9d\x63\xd8\x71\x22\x45\xcb\xba\x7f\x0a\xa4\x4d\x94\xac\x3a\x1b\xd6\x3d\x4a\x0f\xd1\x23\x1a\x5c\x87\xd7\x1f\x0b\x92\x6e\xe0\x95\xdb\x9c\xb4\x48\x77\x69\xf4\x87\x7a\x7b\xaf\xe3\x3c\xd2\x34\x8e\x88\xb0\x5b\x9f\x5d\xe2\x20\xb9\xf5\x09\x4b\x50\x8b\x08\xab\xc2\xc7\x88\x81\xcd\xcc\xdb\xef\x14\x80\x9c\x08\x45\xa3\x22\xd5\x19\x1c\x51\x98\x70\x71\x3a\xcb\xf6\xb5\x43\xde\x63\xc4\x99\xef\xd7\xda\xdb\x01\xb1\xfb\x99\xe6\x6c\x98\xb0\x8b\x82\x3a\xde\x1d\xcd\x70\xa4\xc2\xd6\x58\x0e\x57\xee\xa7\x0f\x9d\x77\xf2\x7d\x19\x53\xaa\x45\xdb\xda\xdf\xfd\x5f\x44\x52\xbd\xad\x44\x2d\xc9\xf9\xba\x11\x99\xab\x55\xb9\x81\xff\x38\x95\x69\x87\x49\x41\x6c\x99\xc2\x23\x52\x62\xf5\x1b\xc5\xe5\xe2\xb0\x12\x1b\xcb\x7c\xcf\x05\x1e\x51\xc0\x55\xcc\x4d\xc1\xc3\xb0\x6d\x07\xbf\x3c\x46\xb7\xff\x42\xc1\x8d\x93\x31\x4c\x2c\x0d\xd4\x2d\x31\x43\x72\xde\xe9\x6d\x01\x89\xfb\x5d\xe3\xe7\x70\x65\xa9\xbb\x34\xcb\x30\xa6\x44\x61\xea\xad\x95\x95\xc9\xbd\xa1\x0a\x0f\x77\xde\x38\x76\xfc\xe1\x5f\x46\x5c\xc6\xcf\x85\x37\xaa\x06\xf8\xc9\xcf\x86\xe3\xd9\x0a\x86\x96\xf6\xd9\x89\x84\xd5\x76\xe8\xe5\x6a\x79\x7f\x2c\xbb\xc1\x72\x69\x54\x17\xcb\x40\x58\xba\x8b\x47\xea\x5f\xb5\xaf\x11\x7d\x04\x34\xeb\xc8\xae\x91\x33\x56\xd1\x64\x02\xd7\xc5\xb6\x86\x12\xa3\x75\x5d\xa6\x69\x5d\x75\x48\x6b\xeb\x5a\x07\xbb\x6b\xdd\xab\x71\xae\xd6\xe5\x81\x4d\x61\xdd\x3a\x9d\xb6\x6e\xb4\xd3\xcb\x67\xa3\x43\xed\x5c\x72\x80\xf2\x16\x8e\x2f\x48\x9a\x1f\xc8\x8b\xfa\x9a\x89\x2d\x6b\x9b\x49\x36\x6f\xbb\x4a\x43\xbc\x05\x25\x5c\x19\x54\x2a\x2e\x48\x82\xee\xca\xff\x05\x00\x00\xff\xff\x72\x29\xcb\x36\x05\xaf\x00\x00")

func installerKubeshieldIo_identityserversYamlBytes() ([]byte, error) {
	return bindataRead(
		_installerKubeshieldIo_identityserversYaml,
		"installer.kubeshield.io_identityservers.yaml",
	)
}

func installerKubeshieldIo_identityserversYaml() (*asset, error) {
	bytes, err := installerKubeshieldIo_identityserversYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "installer.kubeshield.io_identityservers.yaml", size: 44805, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"installer.kubeshield.io_identityservers.yaml": installerKubeshieldIo_identityserversYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"installer.kubeshield.io_identityservers.yaml": {installerKubeshieldIo_identityserversYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
